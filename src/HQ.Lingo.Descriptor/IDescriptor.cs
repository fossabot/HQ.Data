#region LICENSE

// Unless explicitly acquired and licensed from Licensor under another
// license, the contents of this file are subject to the Reciprocal Public
// License ("RPL") Version 1.5, or subsequent versions as allowed by the RPL,
// and You may not copy or use this file in either source code or executable
// form, except in compliance with the terms and conditions of the RPL.
// 
// All software distributed under the RPL is provided strictly on an "AS
// IS" basis, WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESS OR IMPLIED, AND
// LICENSOR HEREBY DISCLAIMS ALL SUCH WARRANTIES, INCLUDING WITHOUT
// LIMITATION, ANY WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
// PURPOSE, QUIET ENJOYMENT, OR NON-INFRINGEMENT. See the RPL for specific
// language governing rights and limitations under the RPL.

#endregion

using System.Collections.Generic;

namespace HQ.Lingo.Descriptor
{
    public interface IDescriptor
    {
        string Schema { get; set; }
        string Table { get; }

        /// <summary>
        ///     All non-transient properties; these properties have a counterpart in the database
        /// </summary>
        IList<PropertyToColumn> All { get; }

        /// <summary>
        ///     All properties that may make up a database insert; anything that is not transient or generated by the database
        ///     (keys and computed fields)
        /// </summary>
        IList<PropertyToColumn> Insertable { get; }

        /// <summary>
        ///     The table identity, if it exists
        /// </summary>
        PropertyToColumn Identity { get; }

        /// <summary>
        ///     All columns that are set by the database implicitly
        /// </summary>
        IList<PropertyToColumn> Computed { get; }

        /// <summary>
        ///     All columns that are keys
        /// </summary>
        IList<PropertyToColumn> Keys { get; }

        /// <summary>
        ///     All columns that must be set by the client explicitly
        /// </summary>
        IList<PropertyToColumn> Assigned { get; }

        void Describe();
    }
}
